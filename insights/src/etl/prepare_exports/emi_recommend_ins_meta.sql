-- Databricks notebook source
set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;

CREATE TABLE IF NOT EXISTS ${__BLUE_MAIN_DB__}.emi_recommend_ins_meta(
    ins_hash_val string,
    clnt_obj_id string,
    clnt_obj_id_cmpr_with string,
    yr_cd string,
    yr_cd_cmpr_with string,
    qtr_cd int,
    qtr_cd_cmpr_with int,
    mnth_cd int,
    mnth_cd_cmpr_with int,
    wk_cd int,
    wk_cd_cmpr_with int,
    flsa_stus_cd string,
    flsa_stus_cd_cmpr_with string,
    full_tm_part_tm_cd string,
    full_tm_part_tm_cd_cmpr_with string,
    gndr_cd string,
    gndr_cd_cmpr_with string,
    hr_orgn_id string,
    hr_orgn_id_cmpr_with string,
    job_cd string,
    job_cd_cmpr_with string,
    pay_rt_type_cd string,
    pay_rt_type_cd_cmpr_with string,
    reg_temp_cd string,
    reg_temp_cd_cmpr_with string,
    work_loc_cd string,
    work_loc_cd_cmpr_with string,
    city_id string,
    city_id_cmpr_with string,
    state_prov_cd string,
    state_prov_cd_cmpr_with string,
    iso_3_char_cntry_cd string,
    iso_3_char_cntry_cd_cmpr_with string,
    trmnt_rsn string,
    trmnt_rsn_cmpr_with string,
    adp_lense_cd string,
    adp_lense_cd_cmpr_with string,
    inds_cd string,
    inds_cd_cmpr_with string,
    sector_cd string,
    sector_cd_cmpr_with string,
    super_sect_cd string,
    super_sect_cd_cmpr_with string,
    mngr_pers_obj_id string,
    mngr_pers_obj_id_cmpr_with string,
    mtrc_ky int,
    ins_scor double,
    pctl_rank double,
    ins_type string,
    ins_rsn string,
    empl_cnt double,
    empl_cnt_cmpr_with double,
    pct_empl_cnt double,
    pct_empl_cnt_cmpr_with double,
    nbr_of_diments int,
    ins_json string,    
    rec_crt_ts string,
    --yr_wk_cd string,
    db_schema string,
    environment string
) USING PARQUET
PARTITIONED BY (environment)
TBLPROPERTIES ('parquet.compression'='SNAPPY');

INSERT OVERWRITE TABLE ${__BLUE_MAIN_DB__}.emi_recommend_ins_meta PARTITION(environment)
SELECT
    ins.ins_hash_val,
    ins.clnt_obj_id,
    ins.clnt_obj_id_cmpr_with,
    ins.yr_cd,
    ins.yr_cd_cmpr_with,
    cast(ins.qtr_cd as int) as qtr_cd,
  cast(ins.qtr_cd_cmpr_with as int) as qtr_cd_cmpr_with,
  cast(ins.mnth_cd as int) as mnth_cd,
  cast(ins.mnth_cd_cmpr_with as int) as mnth_cd_cmpr_with,
    cast(ins.wk_cd as int) as wk_cd,
    cast(ins.wk_cd_cmpr_with as int) as wk_cd_cmpr_with,
    ins.flsa_stus_cd,
    ins.flsa_stus_cd_cmpr_with,
    ins.full_tm_part_tm_cd,
    ins.full_tm_part_tm_cd_cmpr_with,
    ins.gndr_cd,
    ins.gndr_cd_cmpr_with,
    ins.hr_orgn_id,
    ins.hr_orgn_id_cmpr_with,
    ins.job_cd,
    ins.job_cd_cmpr_with,
    ins.pay_rt_type_cd,
    ins.pay_rt_type_cd_cmpr_with,
    ins.reg_temp_cd,
    ins.reg_temp_cd_cmpr_with,
    ins.work_loc_cd,
    ins.work_loc_cd_cmpr_with,
    ins.city_id,
    ins.city_id_cmpr_with,
    ins.state_prov_cd,
    ins.state_prov_cd_cmpr_with,
    ins.iso_3_char_cntry_cd,
    ins.iso_3_char_cntry_cd_cmpr_with,
    ins.trmnt_rsn,
    ins.trmnt_rsn_cmpr_with,
    ins.adp_lense_cd,
    ins.adp_lense_cd_cmpr_with,
    ins.inds_cd,
    ins.inds_cd_cmpr_with,
    ins.sector_cd,
    ins.sector_cd_cmpr_with,
    ins.super_sect_cd,
    ins.super_sect_cd_cmpr_with,
    ins.mngr_pers_obj_id,
    ins.mngr_pers_obj_id_cmpr_with,
    cast(ins.mtrc_ky as int) as mtrc_ky,
    ins.ins_scor,
    ins.pctl_rank,
    ins.ins_type,
    ins.ins_rsn,
    ins.empl_cnt,
    ins.empl_cnt_cmpr_with,
    ins.pct_empl_cnt,
    ins.pct_empl_cnt_cmpr_with,
    ins.nbr_of_diments,
    ins.ins_json,
    ins.rec_crt_ts,
    --ins.yr_wk_cd,
    ins.db_schema,
    ins.environment
FROM
    ${__RO_BLUE_RAW_DB__}.dwh_t_fact_ins_hist ins;
--WHERE
--    environment = '${environment}'
--DISTRIBUTE BY environment;