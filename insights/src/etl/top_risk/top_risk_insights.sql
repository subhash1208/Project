-- Databricks notebook source
set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;

DROP TABLE IF EXISTS ${__BLUE_MAIN_DB__}.top_risk_insights;

CREATE TABLE ${__BLUE_MAIN_DB__}.top_risk_insights(
    CLNT_OBJ_ID STRING,
    PERS_OBJ_ID STRING,
    RPT_DT STRING,
    TRNOVR_PRBLTY_PCT DOUBLE,
    TRNOVR_PRBLTY_RANGE_DSC STRING,
    TRNOVR_PRBLTY_RANGE_LVL INT,
    CLNT_EMPL_CNT INT,
    MNGR_TOT_RPT_CNT INT,
    MNGR_JOB_EMPL_CNT INT,
    INDS_CLNT_CNT INT,
    INDS_EMPL_CNT INT,
    FCTR_NM STRING,
    FCTR_VAL DOUBLE,
    NOR_FCTR_VAL DOUBLE,
    sectorCode STRING,
    db_schema STRING,
    MNGR_PERS_OBJ_ID STRING,
    JOB_CD STRING,
    REG_TEMP_DSC STRING,
    --FWA_REC_EFF_STRT_DT TIMESTAMP,
    --FWA_REC_EFF_END_DT TIMESTAMP,
    --WORK_LOC_CD STRING,
    PRMRY_STD_JOB_TITL_KY STRING,
    CLNT_ORG_MEAN DOUBLE,
    CLNT_NOR_MEAN DOUBLE,
    CLNT_ORG_STDDEV DOUBLE,
    CLNT_NOR_STDDEV DOUBLE,
    CLNT_MEAS_VAL DOUBLE,
    --CLNT_BNCHMRK_ORG_IQR_LOWER_OL DOUBLE,
    --CLNT_BNCHMRK_NOR_IQR_LOWER_OL DOUBLE,
    --CLNT_BNCHMRK_ORG_IQR_UPPER_OL DOUBLE,
    --CLNT_BNCHMRK_NOR_IQR_UPPER_OL DOUBLE,
    MNGR_ORG_MEAN DOUBLE,
    MNGR_NOR_MEAN DOUBLE,
    MNGR_ORG_STDDEV DOUBLE,
    MNGR_NOR_STDDEV DOUBLE,
    MNGR_MEAS_VAL DOUBLE,
    --MNGR_BNCHMRK_ORG_IQR_LOWER_OL DOUBLE,
    --MNGR_BNCHMRK_NOR_IQR_LOWER_OL DOUBLE,
    --MNGR_BNCHMRK_ORG_IQR_UPPER_OL DOUBLE,
    --MNGR_BNCHMRK_NOR_IQR_UPPER_OL DOUBLE,
    INDS_ORG_MEAN DOUBLE,
    INDS_NOR_MEAN DOUBLE,
    INDS_ORG_STDDEV DOUBLE,
    INDS_NOR_STDDEV DOUBLE,
    INDS_MEAS_VAL DOUBLE,
    --INDS_BNCHMRK_ORG_IQR_LOWER_OL DOUBLE,
    --INDS_BNCHMRK_NOR_IQR_LOWER_OL DOUBLE,
    --INDS_BNCHMRK_ORG_IQR_UPPER_OL DOUBLE,
    --INDS_BNCHMRK_NOR_IQR_UPPER_OL DOUBLE,
    CLNT_LVL_ORG_ZSCORE DOUBLE,
    CLNT_LVL_NOR_ZSCORE DOUBLE,
    MNGR_LVL_ORG_ZSCORE DOUBLE,
    MNGR_LVL_NOR_ZSCORE DOUBLE,
    INDS_LVL_ORG_ZSCORE DOUBLE,
    INDS_LVL_NOR_ZSCORE DOUBLE
    --ENVIRONMENT STRING
)USING PARQUET
TBLPROPERTIES ('parquet.compression'='SNAPPY');

INSERT OVERWRITE TABLE ${__BLUE_MAIN_DB__}.top_risk_insights
SELECT 
    PRBLTY.CLNT_OBJ_ID , 
    PRBLTY.PERS_OBJ_ID ,
    PRBLTY.RPT_DT , 
    PRBLTY.TRNOVR_PRBLTY_PCT , 
    PRBLTY.TRNOVR_PRBLTY_RANGE_DSC , 
    PRBLTY.TRNOVR_PRBLTY_RANGE_LVL,
    client_bm.empl_cnt as clnt_empl_cnt,
    TOT_RPTS AS mngr_tot_rpt_cnt,
    mngr_bm.empl_cnt as mngr_job_empl_cnt,
    BP.CLNT_CNT as inds_clnt_cnt,
    BP.EMPL_CNT as inds_empl_cnt,
    PRBLTY.FCTR_NM,
    PRBLTY.FCTR_VAL ,
    PRBLTY.NOR_FCTR_VAL,
    TOP_IN.sector_cd , 
    PRBLTY.db_schema , 
    TOP_IN.MNGR_PERS_OBJ_ID , 
    TOP_IN.JOB_CD ,
    TOP_IN.REG_TEMP_DSC,
    --FWA.WORK_LOC_CD,
	--FWA.ENVIRONMENT,
    TOP_IN.PRMRY_STD_JOB_TITL_KY,
    client_bm.MEAS_ORG_MEAN AS CLNT_ORG_MEAN,
    client_bm.MEAS_NOR_MEAN AS CLNT_NOR_MEAN,
    client_bm.MEAS_ORG_STDDEV AS CLNT_ORG_STDDEV,
    client_bm.MEAS_NOR_STDDEV AS CLNT_NOR_STDDEV,
    client_bm.MEAS_50TH_PERCENTILE AS CLNT_MEAS_VAL,
    --client_bm.MEAS_ORG_IQR_LOWER_OL AS CLNT_ORG_IQR_LOW_OL,
    --client_bm.MEAS_NOR_IQR_LOWER_OL AS CLNT_NOR_IQR_LOW_OL,
    --client_bm.MEAS_ORG_IQR_UPPER_OL AS CLNT_ORG_IQR_UP_OL,
    --client_bm.MEAS_NOR_IQR_UPPER_OL AS CLNT_NOR_IQR_UP_OL,
    mngr_bm.MEAS_ORG_MEAN AS MNGR_ORG_MEAN,
    mngr_bm.MEAS_NOR_MEAN AS MNGR_NOR_MEAN,
    mngr_bm.MEAS_ORG_STDDEV AS MNGR_ORG_STDDEV,
    mngr_bm.MEAS_NOR_STDDEV AS MNGR_NOR_STDDEV,
    mngr_bm.MEAS_50TH_PERCENTILE AS MNGR_MEAS_VAL,
    --mngr_bm.MEAS_ORG_IQR_LOWER_OL AS MNGR_ORG_IQR_LOW_OL,
    --mngr_bm.MEAS_NOR_IQR_LOWER_OL AS MNGR_NOR_IQR_LOW_OL,
    --mngr_bm.MEAS_ORG_IQR_UPPER_OL AS MNGR_ORG_IQR_UP_OL,
    --mngr_bm.MEAS_NOR_IQR_UPPER_OL AS MNGR_NOR_IQR_UP_OL,
    BP.MEAS_ORG_MEAN AS INDS_ORG_MEAN,
    BP.MEAS_NOR_MEAN AS INDS_NOR_MEAN,
    BP.MEAS_ORG_STDDEV AS INDS_ORG_STDDEV,
    BP.MEAS_NOR_STDDEV AS INDS_NOR_STDDEV,
    BP.MEAS_50TH_PERCENTILE AS INDS_MEAS_VAL,
    --BP.MEAS_ORG_IQR_LOWER_OL AS INDS_ORG_IQR_LOW_OL,
    --BP.MEAS_NOR_IQR_LOWER_OL AS INDS_NOR_IQR_LOW_OL,
    --BP.MEAS_ORG_IQR_UPPER_OL AS INDS_ORG_IQR_UP_OL,
    --BP.MEAS_NOR_IQR_UPPER_OL AS INDS_NOR_IQR_UP_OL,
    CASE WHEN (PRBLTY.FCTR_VAL <> 0 and client_bm.MEAS_ORG_STDDEV <> 0) THEN (PRBLTY.FCTR_VAL - client_bm.MEAS_ORG_MEAN)/client_bm.MEAS_ORG_STDDEV ELSE NULL END AS CLNT_LVL_ORG_ZSCORE,
    CASE WHEN (PRBLTY.NOR_FCTR_VAL <> 0 and client_bm.MEAS_NOR_STDDEV <> 0) THEN (PRBLTY.NOR_FCTR_VAL - client_bm.MEAS_NOR_MEAN)/client_bm.MEAS_NOR_STDDEV ELSE NULL END AS CLNT_LVL_NOR_ZSCORE,
    CASE WHEN (PRBLTY.FCTR_VAL <> 0 and mngr_bm.MEAS_ORG_STDDEV <> 0) THEN (PRBLTY.FCTR_VAL - mngr_bm.MEAS_ORG_MEAN)/mngr_bm.MEAS_ORG_STDDEV ELSE NULL END AS MNGR_LVL_ORG_ZSCORE,
    CASE WHEN (PRBLTY.NOR_FCTR_VAL <> 0 and mngr_bm.MEAS_NOR_STDDEV <> 0) THEN (PRBLTY.NOR_FCTR_VAL - mngr_bm.MEAS_NOR_MEAN)/mngr_bm.MEAS_NOR_STDDEV ELSE NULL END AS MNGR_LVL_NOR_ZSCORE,
    CASE WHEN (PRBLTY.FCTR_VAL <> 0 and BP.MEAS_ORG_STDDEV <> 0) THEN (PRBLTY.FCTR_VAL - BP.MEAS_ORG_MEAN)/BP.MEAS_ORG_STDDEV ELSE NULL END AS INDS_LVL_ORG_ZSCORE,
    CASE WHEN (PRBLTY.NOR_FCTR_VAL <> 0 and BP.MEAS_NOR_STDDEV <> 0) THEN (PRBLTY.NOR_FCTR_VAL - BP.MEAS_NOR_MEAN)/BP.MEAS_NOR_STDDEV ELSE NULL END AS INDS_LVL_NOR_ZSCORE
    FROM
(
SELECT 
    P.CLNT_OBJ_ID,
    P.PERS_OBJ_ID,
    P.RPT_DT , 
    P.TRNOVR_PRBLTY_PCT , 
    P.TRNOVR_PRBLTY_RANGE_DSC ,
    case 
    when P.TRNOVR_PRBLTY_RANGE_DSC in ('High') then 2 
    when P.TRNOVR_PRBLTY_RANGE_DSC in ('Medium') then 1  
    else 0 end as TRNOVR_PRBLTY_RANGE_LVL , 
    F.FCTR_NM,
    F.FCTR_VAL ,
    LN(F.FCTR_VAL) as NOR_FCTR_VAL,
    P.db_schema
FROM 
${__BLUE_MAIN_DB__}.T_EMPL_TRNOVR_PRBLTY P
INNER JOIN (
    SELECT CLNT_OBJ_ID,PERS_OBJ_ID,RPT_DT,DB_SCHEMA,FCTR_NM,FCTR_VAL,QTR FROM 
    ${__BLUE_MAIN_DB__}.T_EMPL_TRNOVR_FCTR WHERE QTR IN(SELECT MAX(QTR) FROM ${__BLUE_MAIN_DB__}.T_EMPL_TRNOVR_FCTR))F ON
    P.CLNT_OBJ_ID = F.CLNT_OBJ_ID 
    AND P.PERS_OBJ_ID = F.PERS_OBJ_ID 
    AND to_date(P.RPT_DT)=to_date(F.RPT_DT)
    AND P.QTR = F.QTR
    AND P.db_schema=F.db_schema
--INNER JOIN (SELECT clnt_obj_id , get_json_object(clnt_prfl_dtl, '$.primaryIndustry.sectorCode') as sectorCode from ${__RO_GREEN_RAW_DB__}.dw_t_clnt_prfl_setting) prfl 
--    on P.clnt_obj_id=prfl.clnt_obj_id
WHERE
    P.TRNOVR_PRBLTY_RANGE_DSC IN ('High','Medium')
    AND F.FCTR_NM IN ('annl_cmpn_amt','qtrs_since_last_promotion','overtime_dbltime_hours')
    AND F.FCTR_VAL IS NOT NULL AND F.FCTR_VAL <> 0
    --AND F.RPT_DT=CONCAT(cast(YEAR(CURRENT_DATE) as string),'-', 
	--	CASE WHEN MONTH(CURRENT_DATE) > 9 THEN cast(MONTH(CURRENT_DATE) as string) 
	--	ELSE CONCAT('0', cast(MONTH(CURRENT_DATE) as string)) END, 
	--	'-01 00:00:00.000')
    --AND P.clnt_obj_id='05QRX003FE500004'
) PRBLTY
INNER JOIN ${__BLUE_MAIN_DB__}.TOP_RISK_MNGR_HIERARCHY TOP_IN
    ON PRBLTY.clnt_obj_id = TOP_IN.clnt_obj_id
    AND PRBLTY.db_schema = TOP_IN.db_schema
    AND PRBLTY.pers_obj_id = TOP_IN.pers_obj_id
INNER JOIN(
    SELECT CLNT_OBJ_ID,DB_SCHEMA,MNGR_PERS_OBJ_ID,COUNT(DISTINCT PERS_OBJ_ID) AS TOT_RPTS FROM ${__BLUE_MAIN_DB__}.TOP_RISK_MNGR_HIERARCHY
    GROUP BY CLNT_OBJ_ID,DB_SCHEMA,MNGR_PERS_OBJ_ID
)TOT_RPT
ON TOP_IN.CLNT_OBJ_ID = TOT_RPT.CLNT_OBJ_ID
AND TOP_IN.DB_SCHEMA = TOT_RPT.DB_SCHEMA
AND TOP_IN.MNGR_PERS_OBJ_ID = TOT_RPT.MNGR_PERS_OBJ_ID
--INNER JOIN ${__GREEN_MAIN_DB__}.TOP_RISK_MNGR_HIERARCHY_INPUT TOP_IN
--    ON TOP_IN.clnt_obj_id = PRBLTY.CLNT_OBJ_ID
--    AND TOP_IN.db_schema = PRBLTY.db_schema
--    AND TOP_IN.pers_obj_id = PRBLTY.pers_obj_id
INNER JOIN ${__BLUE_MAIN_DB__}.CLNT_BNCHMRK_TRNOVR_RISK client_bm
	ON client_bm.CLNT_OBJ_ID = PRBLTY.CLNT_OBJ_ID
    --AND FWA.PERS_OBJ_ID = PRBLTY.PERS_OBJ_ID
    AND client_bm.db_schema = PRBLTY.db_schema
    AND client_bm.job_cd <=> TOP_IN.job_cd
    AND client_bm.meas_nm <=> PRBLTY.FCTR_NM
INNER JOIN ${__BLUE_MAIN_DB__}.MNGR_BNCHMRK_TRNOVR_RISK mngr_bm
    ON PRBLTY.clnt_obj_id = mngr_bm.clnt_obj_id
    AND PRBLTY.db_schema = mngr_bm.db_schema
    AND TOP_IN.mngr_pers_obj_id = mngr_bm.mngr_pers_obj_id
    AND TOP_IN.job_cd <=> mngr_bm.job_cd
    AND PRBLTY.FCTR_NM <=> mngr_bm.meas_nm
--INNER JOIN (
--    SELECT 
--      DISTINCT 
--      clnt_obj_id,
--      db_schema,
--      job_cd,
--      prmry_std_job_titl_ky
--    FROM 
--     ${__RO_GREEN_BASE_DB__}.jc_t_clnt_job_titl_map_export ) J
--    ON J.CLNT_OBJ_ID = FWA.CLNT_OBJ_ID
--    AND J.JOB_CD  =FWA.JOB_CD
--    AND J.db_Schema = FWA.db_schema
LEFT OUTER JOIN (
    SELECT 
      STD_JOB_TITL_KY,
      meas_nm,
      SECTOR,
      CLNT_CNT,
      EMPL_CNT,
      MEAS_ORG_MEAN,
      MEAS_NOR_MEAN,
      MEAS_ORG_STDDEV,
      MEAS_NOR_STDDEV,
      MEAS_50TH_PERCENTILE
      --MEAS_ORG_IQR_LOWER_OL,
      --MEAS_NOR_IQR_LOWER_OL,
      --MEAS_ORG_IQR_UPPER_OL,
      --MEAS_NOR_IQR_UPPER_OL
    FROM ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK BP
    WHERE 
    MEAS_ORG_MEAN IS NOT NULL AND SUPERSECTOR='-1' AND STD_JOB_TITL_KY <> '-1' AND SECTOR <> '-1'
    AND QTR IN (SELECT MAX(QTR) FROM ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK)) BP
--ON BP.STD_JOB_TITL_KY <=> J.prmry_std_job_titl_ky
ON BP.STD_JOB_TITL_KY <=> TOP_IN.PRMRY_STD_JOB_TITL_KY
AND bp.meas_nm <=> PRBLTY.FCTR_NM 
AND bp.SECTOR <=> TOP_IN.SECTOR_CD;