-- Databricks notebook source
set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.exec.max.dynamic.partitions.pernode=2000;
set hive.exec.max.dynamic.partitions=3000;
set hive.exec.max.created.files=150000;
set hive.merge.mapfiles=true;
set hive.merge.mapredfiles=true;
set hive.merge.smallfiles.avgsize=32000000;
set spark.sql.crossJoin.enabled=true;

--DROP TABLE IF EXISTS ${__GREEN_MAIN_DB__}.T_BNCHMRK_TRNOVR_PRBLTY;
DROP TABLE IF EXISTS ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK;

CREATE TABLE IF NOT EXISTS ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK
(  
  RPT_DT  STRING,
  STD_JOB_TITL_KY       STRING,
  CLNT_CNT              INT,
  EMPL_CNT              INT,
  MEAS_NM               STRING,
  MEAS_ORG_MEAN              DOUBLE,
  MEAS_NOR_MEAN             DOUBLE,
  MEAS_ORG_STDDEV       DOUBLE,
  MEAS_NOR_STDDEV       DOUBLE,
  MEAS_50TH_PERCENTILE DOUBLE,
  --MEAS_NOR_IQR_LOWER_OL DOUBLE,
  --MEAS_ORG_IQR_UPPER_OL DOUBLE,
  --MEAS_NOR_IQR_UPPER_OL DOUBLE,
  REC_CRT_TS            STRING,
  SUPERSECTOR STRING,
  SECTOR                STRING,
  QTR                   STRING
) 
USING PARQUET
PARTITIONED BY (QTR);

INSERT INTO TABLE ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK PARTITION(QTR)
SELECT A.RPT_DT,
A.STD_JOB_TITL_KY,
A.CLNT_CNT,
A.EMPL_CNT,
A.MEAS_NM,
A.MEAS_ORG_MEAN,
A.MEAS_NOR_MEAN,
A.MEAS_ORG_STDDEV,
A.MEAS_NOR_STDDEV,
A.MEAS_50TH_PERCENTILE,
--A.MEAS_ORG_IQR_LOWER_OL,
--A.MEAS_NOR_IQR_LOWER_OL,
--A.MEAS_ORG_IQR_UPPER_OL,
--A.MEAS_NOR_IQR_UPPER_OL,
A.REC_CRT_TS,
A.SUPERSECTOR,
A.SECTOR,
A.QTR
FROM ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK_TEMP A
CROSS JOIN 
(SELECT DISTINCT SUPERSECTOR_CD AS SUPER_SECTR_INDS_CD FROM ${__RO_GREEN_RAW_DB__}.META_ADP_INDUSTRY_HIERARCHY WHERE SUPERSECTOR_CD IS NOT NULL) B
LEFT OUTER JOIN  
(SELECT STD_JOB_TITL_KY, SUPERSECTOR,  SECTOR
FROM ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK_TEMP
WHERE QTR='GA_${qtr}'  AND  SECTOR = '-1'
) C
ON (A.STD_JOB_TITL_KY = C.STD_JOB_TITL_KY
AND B.SUPER_SECTR_INDS_CD = C.SUPERSECTOR
AND  A.SECTOR  = C.SECTOR) 
WHERE A.QTR='GA_${qtr}'  
AND A.SUPERSECTOR= '-1'
AND  A.SECTOR = '-1'
AND C.SUPERSECTOR IS NULL;


INSERT INTO TABLE ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK PARTITION(QTR)
SELECT A.RPT_DT,
A.STD_JOB_TITL_KY,
A.CLNT_CNT,
A.EMPL_CNT,
A.MEAS_NM,
A.MEAS_ORG_MEAN,
A.MEAS_NOR_MEAN,
A.MEAS_ORG_STDDEV,
A.MEAS_NOR_STDDEV,
A.MEAS_50TH_PERCENTILE,
--A.MEAS_NOR_IQR_LOWER_OL,
--A.MEAS_ORG_IQR_UPPER_OL,
--A.MEAS_NOR_IQR_UPPER_OL,
A.REC_CRT_TS,
--A.REG_TEMP_CD,
--A.FULL_TM_PART_TM_CD,
A.SUPERSECTOR,
B.SECTR_INDS_CD,
A.QTR
FROM ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK_TEMP A
CROSS JOIN 
(SELECT DISTINCT SECTOR_CD AS SECTR_INDS_CD FROM ${__RO_GREEN_RAW_DB__}.META_ADP_INDUSTRY_HIERARCHY WHERE SECTOR_CD IS NOT NULL) B
LEFT OUTER JOIN  
(SELECT STD_JOB_TITL_KY, MEAS_NM, SUPERSECTOR,  SECTOR
FROM ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK_TEMP
WHERE QTR='GA_${qtr}'  AND  SUPERSECTOR = '-1'
) C
ON 
(A.STD_JOB_TITL_KY = C.STD_JOB_TITL_KY
AND A.MEAS_NM = C.MEAS_NM
AND A.SUPERSECTOR = C.SUPERSECTOR
--AND A.REG_TEMP_CD = C.REG_TEMP_CD 
--AND  A.FULL_TM_PART_TM_CD = C.FULL_TM_PART_TM_CD
AND  B.SECTR_INDS_CD  = C.SECTOR) 
WHERE A.QTR='GA_${qtr}'   
AND A.SUPERSECTOR= '-1'
AND  A.SECTOR = '-1'
AND C.SECTOR IS NULL;


INSERT INTO TABLE ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK PARTITION(QTR)
SELECT 
RPT_DT ,
STD_JOB_TITL_KY    ,
CLNT_CNT           ,
EMPL_CNT           ,
MEAS_NM            ,
MEAS_ORG_MEAN,
MEAS_NOR_MEAN,
MEAS_ORG_STDDEV,
MEAS_NOR_STDDEV,
MEAS_50TH_PERCENTILE,
--MEAS_ORG_IQR_LOWER_OL,
--MEAS_NOR_IQR_LOWER_OL,
--MEAS_ORG_IQR_UPPER_OL,
--MEAS_NOR_IQR_UPPER_OL,
REC_CRT_TS         ,
--REG_TEMP_CD        ,
--FULL_TM_PART_TM_CD ,
SUPERSECTOR        ,
SECTOR,
QTR
FROM  ${__BLUE_MAIN_DB__}.INDS_BNCHMRK_TRNOVR_RISK_TEMP
WHERE 
      qtr = 'GA_${qtr}';