-- Databricks notebook source
set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;

CREATE TABLE IF NOT EXISTS ${__BLUE_MAIN_DB__}.t_fact_ins_risk (
    ins_hash_val string,
    clnt_obj_id string,
    clnt_obj_id_cmpr_with string,
    yr_cd string,
    yr_cd_cmpr_with string,
    qtr_cd int,
    qtr_cd_cmpr_with int,
    mnth_cd int,
    mnth_cd_cmpr_with int,
    wk_cd int,
    wk_cd_cmpr_with int,
    flsa_stus_cd string,
    flsa_stus_cd_cmpr_with string,
    full_tm_part_tm_cd string,
    full_tm_part_tm_cd_cmpr_with string,
    gndr_cd string,
    gndr_cd_cmpr_with string,
    hr_orgn_id string,
    hr_orgn_id_cmpr_with string,
    job_cd string,
    job_cd_cmpr_with string,
    pay_rt_type_cd string,
    pay_rt_type_cd_cmpr_with string,
    reg_temp_cd string,
    reg_temp_cd_cmpr_with string,
    work_loc_cd string,
    work_loc_cd_cmpr_with string,
    city_id string,
    city_id_cmpr_with string,
    state_prov_cd string,
    state_prov_cd_cmpr_with string,
    iso_3_char_cntry_cd string,
    iso_3_char_cntry_cd_cmpr_with string,
    trmnt_rsn string,
    trmnt_rsn_cmpr_with string,
    adp_lense_cd string,
    adp_lense_cd_cmpr_with string,
    inds_cd string,
    inds_cd_cmpr_with string,
    sector_cd string,
    sector_cd_cmpr_with string,
    super_sect_cd string,
    super_sect_cd_cmpr_with string,
    mngr_pers_obj_id string,
    mngr_pers_obj_id_cmpr_with string,
    mtrc_ky int,
    ins_scor double,
    pctl_rank double,
    ins_type string,
    ins_rsn string,
    empl_cnt double,
    empl_cnt_cmpr_with double,
    pct_empl_cnt double,
    pct_empl_cnt_cmpr_with double,
    nbr_of_diments int,
    ins_json string,    
    rec_crt_ts DATE,
    excp_type string,
    excp_type_cmpr_with string,
    supvr_pers_obj_id string,
    supvr_pers_obj_id_cmpr_with string,
    RPT_TYPE STRING,
    db_schema STRING,
    environment string
) USING PARQUET
PARTITIONED BY (environment)
TBLPROPERTIES ('parquet.compression'='SNAPPY');

INSERT OVERWRITE TABLE ${__BLUE_MAIN_DB__}.t_fact_ins_risk PARTITION(environment)
SELECT
    main.ins_hash_val ,
    main.clnt_obj_id ,
    NULL AS clnt_obj_id_cmpr_with,
    year(rpt_dt) as yr_cd ,
    NULL AS yr_cd_cmpr_with,
    quarter(rpt_dt) as qtr_cd ,
    NULL AS qtr_cd_cmpr_with ,
    month(rpt_dt) as mnth_cd ,
    NULL AS mnth_cd_cmpr_with ,
    NULL AS wk_cd ,
    NULL AS wk_cd_cmpr_with ,
    NULL AS flsa_stus_cd ,
    NULL AS flsa_stus_cd_cmpr_with ,
    NULL AS full_tm_part_tm_cd ,
    NULL AS full_tm_part_tm_cd_cmpr_with ,
    NULL AS gndr_cd ,
    NULL AS gndr_cd_cmpr_with ,
    NULL AS hr_orgn_id ,
    NULL AS hr_orgn_id_cmpr_with ,
    NULL AS job_cd ,
    NULL AS job_cd_cmpr_with ,
    NULL AS pay_rt_type_cd ,
    NULL AS pay_rt_type_cd_cmpr_with ,
    NULL AS reg_temp_cd ,
    NULL AS reg_temp_cd_cmpr_with ,
    NULL AS work_loc_cd ,
    NULL AS work_loc_cd_cmpr_with ,
    NULL AS city_id ,
    NULL AS city_id_cmpr_with ,
    NULL AS state_prov_cd ,
    NULL AS state_prov_cd_cmpr_with ,
    NULL AS iso_3_char_cntry_cd ,
    NULL AS iso_3_char_cntry_cd_cmpr_with ,
    NULL AS trmnt_rsn ,
    NULL AS trmnt_rsn_cmpr_with ,
    NULL AS adp_lense_cd ,
    NULL AS adp_lense_cd_cmpr_with ,
    NULL AS inds_cd ,
    NULL AS inds_cd_cmpr_with ,
    sectorCode as sector_cd ,
    NULL AS sector_cd_cmpr_with ,
    NULL AS super_sect_cd ,
    NULL AS super_sect_cd_cmpr_with ,
    main.mngr_pers_obj_id ,
    NULL AS mngr_pers_obj_id_cmpr_with ,
    701 as mtrc_ky ,
    100 AS ins_scor ,
    NULL AS pctl_rank ,
    upper(main.ins_type) as ins_type,
    upper(main.ins_rsn) as ins_rsn,
    TOT_OUTLAYER_CNT as empl_cnt ,
    NULL AS empl_cnt_cmpr_with ,
    ROUND((TOT_OUTLAYER_CNT/mngr_tot_rpt_cnt) * 100,2) AS pct_empl_cnt ,
    NULL AS pct_empl_cnt_cmpr_with ,
    NULL AS nbr_of_diments ,
    CONCAT(
        "{ \"rpt_dt\": ", COALESCE(cast(rpt_dt AS STRING),'null'),
        ",\"total_risk_employees\": ", COALESCE(CAST(TOT_OUTLAYER_CNT AS STRING),'null'),
        ",\"total_headcount\": ", COALESCE(CAST(mngr_tot_rpt_cnt AS STRING),'null'),
        ",\"team_org_avg\": ", COALESCE(CAST(MNGR_ORG_MEAN AS STRING),'null'),
        ",\"team_nor_avg\": ", COALESCE(CAST(MNGR_NOR_MEAN AS STRING),'null'),
        ",\"team_org_stddev\": ", COALESCE(CAST(MNGR_ORG_STDDEV AS STRING),'null'),
        ",\"team_nor_stddev\": ", COALESCE(CAST(MNGR_NOR_STDDEV AS STRING),'null'),
        ",\"org_nor_avg\": ", COALESCE(CAST(CLNT_ORG_MEAN AS STRING),'null'),
        ",\"org_nor_avg\": ", COALESCE(CAST(CLNT_NOR_MEAN AS STRING),'null'),
        ",\"org_org_stddev\": ", COALESCE(CAST(CLNT_ORG_STDDEV AS STRING),'null'),
        ",\"org_nor_stddev\": ", COALESCE(CAST(CLNT_NOR_STDDEV AS STRING),'null'),
        ",\"inds_org_mean\": ", COALESCE(CAST(INDS_ORG_MEAN AS STRING),'null'),
        ",\"inds_nor_mean\": ", COALESCE(CAST(INDS_NOR_MEAN AS STRING),'null'),
        ",\"inds_org_stddev\": ", COALESCE(CAST(INDS_ORG_STDDEV AS STRING),'null'),
        ",\"inds_nor_stddev\": ", COALESCE(CAST(INDS_NOR_STDDEV AS STRING),'null'),
        ",\"team_org_zscore\": ", COALESCE(CAST(MNGR_LVL_ORG_ZSCORE AS STRING),'null'),
        ",\"team_nor_zscore\": ", COALESCE(CAST(MNGR_LVL_NOR_ZSCORE AS STRING),'null'),
        ",\"org_org_zscore\": ", COALESCE(CAST(CLNT_LVL_ORG_ZSCORE AS STRING),'null'),
        ",\"org_nor_zscore\": ", COALESCE(CAST(CLNT_LVL_NOR_ZSCORE AS STRING),'null'),
        ",\"inds_org_zscore\": ", COALESCE(CAST(INDS_LVL_ORG_ZSCORE AS STRING),'null'),
        ",\"inds_nor_zscore\": ", COALESCE(CAST(INDS_LVL_NOR_ZSCORE AS STRING),'null'),"}"
    ) AS insights_json, 
    CURRENT_TIMESTAMP as  rec_crt_ts,
    NULL AS excp_type ,
    NULL AS excp_type_cmpr_with ,
    NULL AS supvr_pers_obj_id ,
    NULL AS supvr_pers_obj_id_cmpr_with ,
    NULL AS RPT_TYPE ,
    main.db_schema ,
    '${environment}' as environment 
FROM
(
    SELECT
    ins_hash_val,
    clnt_obj_id,
    db_schema,
    rpt_dt,
    mngr_pers_obj_id,
    mngr_tot_rpt_cnt,
    --fctr_nm,
    ins_type,
    ins_rsn,
    sectorCode,
    MNGR_ORG_MEAN,
    MNGR_NOR_MEAN,
    MNGR_ORG_STDDEV,
    MNGR_NOR_STDDEV,
    CLNT_ORG_MEAN,
    CLNT_ORG_STDDEV,
    CLNT_NOR_MEAN,
    CLNT_NOR_STDDEV,
    INDS_ORG_MEAN,
    INDS_NOR_MEAN,
    INDS_ORG_STDDEV,
    INDS_NOR_STDDEV,
    MNGR_LVL_ORG_ZSCORE,
    MNGR_LVL_NOR_ZSCORE,
    CLNT_LVL_NOR_ZSCORE,
    CLNT_LVL_ORG_ZSCORE,
    INDS_LVL_NOR_ZSCORE,
    INDS_LVL_ORG_ZSCORE,
    ROW_NUMBER() OVER (PARTITION BY ins_hash_val ORDER BY mngr_tot_rpt_cnt DESC) as rank
    FROM ${__BLUE_MAIN_DB__}.t_fact_empl_ins )main
INNER JOIN (
    SELECT ins_hash_val,COUNT(PERS_OBJ_ID) as TOT_OUTLAYER_CNT FROM ${__BLUE_MAIN_DB__}.t_fact_empl_ins
    GROUP BY ins_hash_val
)sub
ON  main.ins_hash_val = sub.ins_hash_val
WHERE rank=1;