-- Databricks notebook source
set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;

DROP TABLE IF EXISTS ${__BLUE_MAIN_DB__}.t_fact_empl_ins_stg_redshift;


CREATE TABLE IF NOT EXISTS ${__BLUE_MAIN_DB__}.t_fact_empl_ins_stg_redshift (
INS_HASH_VAL  STRING,
CLNT_OBJ_ID  STRING,
PERS_OBJ_ID  STRING,
YR_CD  STRING,
QTR_CD  STRING,
MNTH_CD  STRING,
WK_CD  STRING,
CMPNY_CD  STRING,
FLSA_STUS_CD  STRING,
FULL_TM_PART_TM_CD  STRING,
GNDR_CD  STRING,
HR_ORGN_ID  STRING,
JOB_CD  STRING,
PAY_GRP_CD  STRING,
PAYCD_GRP_CD  STRING,
PAYCD_ID  STRING,
PAY_RT_TYPE_CD  STRING,
PAYRL_ORGN_ID  STRING,
REG_TEMP_CD  STRING,
WORK_LOC_CD  STRING,
CITY_ID  STRING,
STATE_PROV_CD  STRING,
ISO_3_CHAR_CNTRY_CD  STRING,
TRMNT_RSN  STRING,
ADP_LENSE_CD  STRING,
INDS_CD  STRING,
SECTOR_CD  STRING,
SUPER_SECT_CD  STRING,
MNGR_PERS_OBJ_ID  STRING,
MTRC_KY int,
INS_SCOR double,
PCTL_RANK double,
INS_TYPE   STRING,
INS_RSN   STRING,
EMPL_CNT double,
PCT_EMPL_CNT double,
NBR_OF_DIMENTS int,
INS_JSON   STRING,
INS_EMPL_VAL int,
INS_TEAM_VAL int,
INS_ORG_VAL int,
INS_INDS_VAL int,
REC_CRT_TS DATE,
CATG_TYPE  STRING,
EXCP_TYPE  STRING,
SUPVR_PERS_OBJ_ID STRING,
RPT_TYPE STRING,
db_schema STRING) 
USING PARQUET

TBLPROPERTIES ('parquet.compression'='SNAPPY');

INSERT OVERWRITE TABLE ${__BLUE_MAIN_DB__}.t_fact_empl_ins_stg_redshift 
SELECT
INS_HASH_VAL,
CLNT_OBJ_ID,
PERS_OBJ_ID,
YR_CD,
QTR_CD,
MNTH_CD,
WK_CD,
CMPNY_CD,
FLSA_STUS_CD,
FULL_TM_PART_TM_CD,
GNDR_CD,
HR_ORGN_ID,
JOB_CD,
PAY_GRP_CD,
PAYCD_GRP_CD,
PAYCD_ID,
PAY_RT_TYPE_CD,
PAYRL_ORGN_ID,
REG_TEMP_CD,
WORK_LOC_CD,
CITY_ID,
STATE_PROV_CD,
ISO_3_CHAR_CNTRY_CD,
TRMNT_RSN,
ADP_LENSE_CD,
INDS_CD,
SECTOR_CD,
SUPER_SECT_CD,
MNGR_PERS_OBJ_ID,
MTRC_KY,
INS_SCOR,
PCTL_RANK,
INS_TYPE,
INS_RSN,
EMPL_CNT,
PCT_EMPL_CNT,
NBR_OF_DIMENTS,
INS_JSON,
CAST(ROUND(INS_EMPL_VAL) AS INT) AS INS_EMPL_VAL,
CAST(ROUND(INS_TEAM_VAL) AS INT) AS INS_TEAM_VAL,
CAST(ROUND(INS_ORG_VAL) AS INT) AS INS_ORG_VAL,
CAST(ROUND(INS_INDS_VAL) AS INT) AS INS_INDS_VAL,
REC_CRT_TS,
CATG_TYPE,
EXCP_TYPE,
SUPVR_PERS_OBJ_ID,
RPT_TYPE,
db_schema
FROM(
SELECT
INS_HASH_VAL,
f.CLNT_OBJ_ID,
PERS_OBJ_ID,
YR_CD,
QTR_CD,
MNTH_CD,
WK_CD,
CMPNY_CD,
FLSA_STUS_CD,
FULL_TM_PART_TM_CD,
GNDR_CD,
HR_ORGN_ID,
JOB_CD,
PAY_GRP_CD,
PAYCD_GRP_CD,
PAYCD_ID,
PAY_RT_TYPE_CD,
PAYRL_ORGN_ID,
REG_TEMP_CD,
WORK_LOC_CD,
CITY_ID,
STATE_PROV_CD,
ISO_3_CHAR_CNTRY_CD,
TRMNT_RSN,
ADP_LENSE_CD,
INDS_CD,
SECTOR_CD,
SUPER_SECT_CD,
MNGR_PERS_OBJ_ID,
MTRC_KY,
INS_SCOR,
PCTL_RANK,
INS_TYPE,
INS_RSN,
EMPL_CNT,
PCT_EMPL_CNT,
NBR_OF_DIMENTS,
INS_JSON,
INS_EMPL_VAL,
INS_TEAM_VAL,
INS_ORG_VAL,
INS_INDS_VAL,
CURRENT_DATE AS REC_CRT_TS,
CATG_TYPE,
EXCP_TYPE,
SUPVR_PERS_OBJ_ID,
RPT_TYPE,
tcm.db_schema
FROM ${__BLUE_MAIN_DB__}.t_fact_empl_ins_stg f
INNER JOIN
  ${__BLUE_RAW_DB__}.dwh_t_clnt_mapping_redshift tcm
  ON
  f.clnt_obj_id = tcm.clnt_obj_id
)